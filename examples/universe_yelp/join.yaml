apis:
  universe:
    url: 'https://www.universe.com/graphql/beta'
    headers:
      'Authorization': 'Bearer ${env:UNIVERSE_TOKEN}'
  yelp:
    prefix: 'Yelp_'
    url: 'https://api.yelp.com/v3/graphql'
    headers:
      'Authorization': 'Bearer ${env:YELP_TOKEN}'
transformModule: './join.js'
joinIDL: |
  schema {
    query: Query # non-prefixed `Query` from universe API
  }

  extend type Event {
    placesNearby(term: String, radius: Float): Yelp_Businesses @resolveWith(
      query: "getPlacesNearby",
      extraArgs: { fromFragment: "LocationForYelp" }
      transformArgs: "addressAndCityToLocation"
    )
  }

  query getPlacesNearby($location: String!, $term: String, $radius: Float) @send(to: "yelp") {
    search(location: $location, radius: $radius, term: $term) {
      ...CLIENT_SELECTION
    }
  }

  fragment LocationForYelp on Event {
    address @export(as: "address")
    cityName @export(as: "cityName")
  }
